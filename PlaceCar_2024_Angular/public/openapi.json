{
  "openapi": "3.0.1",
  "info": {
    "title": "PlaceCar API",
    "version": "v1"
  },
  "paths": {
    "/api/Clients/id": {
      "get": {
        "tags": [
          "ClientColtroller"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadClientDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadClientDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadClientDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Clients/Employee/{employeeId}": {
      "post": {
        "tags": [
          "ClientColtroller"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Clients/Client/{clientId}": {
      "put": {
        "tags": [
          "ClientColtroller"
        ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePresonCLiDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePresonCLiDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePresonCLiDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/Clients/count": {
      "get": {
        "tags": [
          "ClientColtroller"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/Comptes/Client/{clientId}": {
      "post": {
        "tags": [
          "Compte"
        ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddCompteDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddCompteDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddCompteDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Comptes/Client/{clientId}/Information": {
      "get": {
        "tags": [
          "Compte"
        ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Employees/Parking/{parkingId}": {
      "get": {
        "tags": [
          "Emplyee"
        ],
        "parameters": [
          {
            "name": "parkingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadEmpWorkInDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadEmpWorkInDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadEmpWorkInDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Employees/DuGroupe": {
      "get": {
        "tags": [
          "Emplyee"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadEmpWorkInDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadEmpWorkInDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadEmpWorkInDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Employees/Parking/{parkingId}/Changement": {
      "put": {
        "tags": [
          "Emplyee"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "parkingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Employees/Employee/{employeeId}": {
      "delete": {
        "tags": [
          "Emplyee"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Employees/Count-NombreTotal-Employees": {
      "get": {
        "tags": [
          "Emplyee"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/Employees/Count-NombreTotal-Employees-Parking": {
      "get": {
        "tags": [
          "Emplyee"
        ],
        "parameters": [
          {
            "name": "parkingId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/Employees/Count-NombreTotal--Parkings": {
      "get": {
        "tags": [
          "Emplyee"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/Employees/Stat-Reservation_Mois": {
      "get": {
        "tags": [
          "Emplyee"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StatReservationParMois"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StatReservationParMois"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StatReservationParMois"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Employees/Stat-Transaction_Mois": {
      "get": {
        "tags": [
          "Emplyee"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StatTransacParMois"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StatTransacParMois"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StatTransacParMois"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Factures/Client/{clientId}/NonPaye": {
      "get": {
        "tags": [
          "Facture"
        ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadFactureDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadFactureDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadFactureDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Factures/Client/{clientId}/Paye": {
      "get": {
        "tags": [
          "Facture"
        ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadFactureDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadFactureDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadFactureDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Factures/Statistics/parking/{parkingId}": {
      "get": {
        "tags": [
          "Facture"
        ],
        "parameters": [
          {
            "name": "parkingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "date",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatFacturesBO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatFacturesBO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatFacturesBO"
                }
              }
            }
          }
        }
      }
    },
    "/api/FormuleDePrix": {
      "post": {
        "tags": [
          "FormulePrix"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddFormPrixDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddFormPrixDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddFormPrixDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/FormuleDePrix/Parking/{parkingId}/Formule/{formuleId}": {
      "put": {
        "tags": [
          "FormulePrix"
        ],
        "parameters": [
          {
            "name": "formuleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "prix",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "parkingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/FormuleDePrix/Parking/{parkingId}": {
      "get": {
        "tags": [
          "FormulePrix"
        ],
        "parameters": [
          {
            "name": "parkingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadForulesParkingDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadForulesParkingDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadForulesParkingDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/FormuleDePrix/Formule-Correspendante/Parking/{parkingId}": {
      "get": {
        "tags": [
          "FormulePrix"
        ],
        "parameters": [
          {
            "name": "parkingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "dateDeb",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "dateFin",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FormuleOptionDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FormuleOptionDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FormuleOptionDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/TypesDeFormules": {
      "post": {
        "tags": [
          "FormuleType"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddFormuleTypeDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddFormuleTypeDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddFormuleTypeDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "get": {
        "tags": [
          "FormuleType"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadTypeFormDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadTypeFormDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadTypeFormDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/TypesDeFormules/Update-Description/{typeId}": {
      "put": {
        "tags": [
          "FormuleType"
        ],
        "parameters": [
          {
            "name": "typeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/TypesDeFormules/Update-Titre/{typeId}": {
      "put": {
        "tags": [
          "FormuleType"
        ],
        "parameters": [
          {
            "name": "typeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "titre",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/{address}": {
      "get": {
        "tags": [
          "Geoapify"
        ],
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Parkings": {
      "post": {
        "tags": [
          "Parking"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/parkingDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/parkingDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/parkingDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Parkings/Pays/{paysId}/Ville/{nomVille}": {
      "get": {
        "tags": [
          "Parking"
        ],
        "parameters": [
          {
            "name": "paysId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "nomVille",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Parkings/Pays/{paysId}": {
      "get": {
        "tags": [
          "Parking"
        ],
        "parameters": [
          {
            "name": "paysId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Parkings/Villes/Pays/{paysId}": {
      "get": {
        "tags": [
          "Parking"
        ],
        "parameters": [
          {
            "name": "paysId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Parkings/Employee/{employeeId}": {
      "get": {
        "tags": [
          "Parking"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Parkings/Tout-Les-Parkings": {
      "get": {
        "tags": [
          "Parking"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Parkings/id": {
      "get": {
        "tags": [
          "Parking"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadParkingDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadParkingDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadParkingDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/Pays": {
      "post": {
        "tags": [
          "Pays"
        ],
        "parameters": [
          {
            "name": "nomPays",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "get": {
        "tags": [
          "Pays"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadPaysDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadPaysDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadPaysDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/PlacesParking/Lidre/Parking/{parkingid}/Date/{date}": {
      "get": {
        "tags": [
          "Place"
        ],
        "parameters": [
          {
            "name": "parkingid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadPlaceLibDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadPlaceLibDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadPlaceLibDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/PlacesParking/Parking/{parkingid}/Etage/{etageId}": {
      "get": {
        "tags": [
          "Place"
        ],
        "parameters": [
          {
            "name": "etageId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "parkingid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "date",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "dateDebut",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "dateFin",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PlaceStatusDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PlaceStatusDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PlaceStatusDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/PlacesParking/Occupation/Parking/{parkingid}": {
      "get": {
        "tags": [
          "Place"
        ],
        "parameters": [
          {
            "name": "parkingid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "date",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatPlacesBo"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatPlacesBo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatPlacesBo"
                }
              }
            }
          }
        }
      }
    },
    "/api/PlacesParking/Occupation/Parking/{parkingid}/Etage/{etageNumero}": {
      "get": {
        "tags": [
          "Place"
        ],
        "parameters": [
          {
            "name": "parkingid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "etageNumero",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "date",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatPlacesBo"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatPlacesBo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatPlacesBo"
                }
              }
            }
          }
        }
      }
    },
    "/api/Preferences/Client/{clientId}/Parking/{parkId}": {
      "get": {
        "tags": [
          "Preference"
        ],
        "parameters": [
          {
            "name": "parkId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Preferences/Place/{placeId}": {
      "delete": {
        "tags": [
          "Preference"
        ],
        "parameters": [
          {
            "name": "placeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddPrefDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddPrefDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddPrefDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Reservations/Client/NewReservation": {
      "post": {
        "tags": [
          "Reservation"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddResDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddResDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddResDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Reservations/Client/{clientId}/NonCloture": {
      "get": {
        "tags": [
          "Reservation"
        ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadResClientDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadResClientDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadResClientDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Reservations/Parking/{parkingId}/NonCloture": {
      "get": {
        "tags": [
          "Reservation"
        ],
        "parameters": [
          {
            "name": "parkingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadReservationParkingDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadReservationParkingDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadReservationParkingDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Reservations/Client/{clientId}/Cloture": {
      "get": {
        "tags": [
          "Reservation"
        ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadResClientDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadResClientDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadResClientDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Reservations/Client/{clientId}/Reservation/{reservationId}/Cloture": {
      "put": {
        "tags": [
          "Reservation"
        ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Reservations/Client/{clientId}": {
      "put": {
        "tags": [
          "Reservation"
        ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateClientResDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateClientResDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateClientResDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Reservations/Client/{clientId}/Reservation/{reservationId}/Suprimer": {
      "delete": {
        "tags": [
          "Reservation"
        ],
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Reservations/Statistics-Depart-Arrive/Parking/{parkingid}": {
      "get": {
        "tags": [
          "Reservation"
        ],
        "parameters": [
          {
            "name": "parkingid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "date",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatReservationDebFinBO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatReservationDebFinBO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatReservationDebFinBO"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reservations/Count-Nombe-Reservations/Parking/{parkingid}": {
      "get": {
        "tags": [
          "Reservation"
        ],
        "parameters": [
          {
            "name": "parkingid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "date",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reservations/Count-Nombe-Reservations-Total-Du-Mois/Parking/{parkingid}": {
      "get": {
        "tags": [
          "Reservation"
        ],
        "parameters": [
          {
            "name": "parkingid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "date",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/Stripe/create-checkout-session": {
      "post": {
        "tags": [
          "Stripe"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCheckoutSessionRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCheckoutSessionRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCheckoutSessionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Stripe/ReceivePayement": {
      "post": {
        "tags": [
          "Stripe"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Transactions": {
      "post": {
        "tags": [
          "Trensaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddTransacDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddTransacDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddTransacDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Transactions/Client/{clientId}": {
      "get": {
        "tags": [
          "Trensaction"
        ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadTransacDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadTransacDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadTransacDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Transactions/UpdateTransactionFailure": {
      "put": {
        "tags": [
          "Trensaction"
        ],
        "parameters": [
          {
            "name": "factureId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "commentaire",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/Transactions/PlaceCar": {
      "get": {
        "tags": [
          "Trensaction"
        ],
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadDeataiTransacDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadDeataiTransacDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadDeataiTransacDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/Login": {
      "post": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Users/Logout": {
      "post": {
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Users/NouveauClient": {
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddClientDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddClientDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddClientDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Users/NouveauEmployee": {
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddEmplDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddEmplDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddEmplDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Users/NouveauAdmin": {
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddEmplDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddEmplDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddEmplDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/WeatherForecast": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "operationId": "GetWeatherForecast",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AddClientDto": {
        "type": "object",
        "properties": {
          "perS_Nom": {
            "type": "string",
            "nullable": true
          },
          "perS_Prenom": {
            "type": "string",
            "nullable": true
          },
          "perS_DateNaissance": {
            "type": "string",
            "format": "date-time"
          },
          "perS_Email": {
            "type": "string",
            "nullable": true
          },
          "perS_Password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddCompteDTO": {
        "type": "object",
        "properties": {
          "cB_Nom": {
            "type": "string",
            "nullable": true
          },
          "clientId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AddEmplDto": {
        "type": "object",
        "properties": {
          "perS_Nom": {
            "type": "string",
            "nullable": true
          },
          "perS_Prenom": {
            "type": "string",
            "nullable": true
          },
          "perS_DateNaissance": {
            "type": "string",
            "format": "date-time"
          },
          "perS_Email": {
            "type": "string",
            "nullable": true
          },
          "perS_Password": {
            "type": "string",
            "nullable": true
          },
          "parkingId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AddFormPrixDTO": {
        "type": "object",
        "properties": {
          "prix": {
            "type": "number",
            "format": "double"
          },
          "typeId": {
            "type": "integer",
            "format": "int32"
          },
          "parkingId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AddFormuleTypeDTO": {
        "type": "object",
        "properties": {
          "forM_Title": {
            "type": "string",
            "nullable": true
          },
          "forM_Type_Description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddPrefDTO": {
        "type": "object",
        "properties": {
          "placeId": {
            "type": "integer",
            "format": "int32"
          },
          "parkingId": {
            "type": "integer",
            "format": "int32"
          },
          "clientId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AddResDTO": {
        "type": "object",
        "properties": {
          "reS_DateDebut": {
            "type": "string",
            "format": "date-time"
          },
          "reS_DateFin": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "placeId": {
            "type": "integer",
            "format": "int32"
          },
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "formPrixId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddTransacDTO": {
        "type": "object",
        "properties": {
          "tranS_Communication": {
            "type": "string",
            "nullable": true
          },
          "factureId": {
            "type": "integer",
            "format": "int32"
          },
          "somme": {
            "type": "number",
            "format": "double"
          },
          "compteUnId": {
            "type": "integer",
            "format": "int32"
          },
          "cb_NumCompte_Client": {
            "type": "string",
            "nullable": true
          },
          "preference": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CreateCheckoutSessionRequest": {
        "required": [
          "communication",
          "compteUnId",
          "customerId",
          "factureId",
          "failureUrl",
          "priceId",
          "successUrl"
        ],
        "type": "object",
        "properties": {
          "priceId": {
            "type": "integer",
            "format": "int64"
          },
          "customerId": {
            "minLength": 1,
            "type": "string"
          },
          "factureId": {
            "minLength": 1,
            "type": "string"
          },
          "communication": {
            "minLength": 1,
            "type": "string"
          },
          "compteUnId": {
            "type": "integer",
            "format": "int64"
          },
          "successUrl": {
            "minLength": 1,
            "type": "string"
          },
          "failureUrl": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "FormuleOptionDTO": {
        "type": "object",
        "properties": {
          "formuleId": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "priceDetails": {
            "type": "string",
            "nullable": true
          },
          "total": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "PlaceStatusDto": {
        "type": "object",
        "properties": {
          "placeId": {
            "type": "integer",
            "format": "int32"
          },
          "numeroPlace": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ReadClientDto": {
        "type": "object",
        "properties": {
          "cli_Id": {
            "type": "integer",
            "format": "int32"
          },
          "perS_Nom": {
            "type": "string",
            "nullable": true
          },
          "perS_Prenom": {
            "type": "string",
            "nullable": true
          },
          "perS_DateNaissance": {
            "type": "string",
            "format": "date-time"
          },
          "perS_Email": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReadDeataiTransacDTO": {
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "integer",
            "format": "int32"
          },
          "transactionSomme": {
            "type": "number",
            "format": "double"
          },
          "transactionDate": {
            "type": "string",
            "format": "date-time"
          },
          "transactionCommunication": {
            "type": "string",
            "nullable": true
          },
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "clientPrenom": {
            "type": "string",
            "nullable": true
          },
          "clientNom": {
            "type": "string",
            "nullable": true
          },
          "clientComptetId": {
            "type": "integer",
            "format": "int32"
          },
          "clientComptetNumero": {
            "type": "string",
            "nullable": true
          },
          "beneficierNom": {
            "type": "string",
            "nullable": true
          },
          "beneficiereCompteNumero": {
            "type": "string",
            "nullable": true
          },
          "parkingId": {
            "type": "integer",
            "format": "int32"
          },
          "parkingNom": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReadEmpWorkInDTO": {
        "type": "object",
        "properties": {
          "parK_Id": {
            "type": "integer",
            "format": "int32"
          },
          "parK_Nom": {
            "type": "string",
            "nullable": true
          },
          "emp_Pers_Id": {
            "type": "integer",
            "format": "int32"
          },
          "perS_Nom": {
            "type": "string",
            "nullable": true
          },
          "perS_Prenom": {
            "type": "string",
            "nullable": true
          },
          "perS_DateNaissance": {
            "type": "string",
            "format": "date-time"
          },
          "perS_Email": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReadFactureDTO": {
        "type": "object",
        "properties": {
          "facT_Id": {
            "type": "integer",
            "format": "int32"
          },
          "facT_Somme": {
            "type": "number",
            "format": "double"
          },
          "facT_Date": {
            "type": "string",
            "format": "date-time"
          },
          "reS_Id": {
            "type": "integer",
            "format": "int32"
          },
          "reS_DateReservation": {
            "type": "string",
            "format": "date-time"
          },
          "reS_DateDebut": {
            "type": "string",
            "format": "date-time"
          },
          "reS_DateFin": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReadForulesParkingDTO": {
        "type": "object",
        "properties": {
          "forM_Id": {
            "type": "integer",
            "format": "int32"
          },
          "forM_Prix": {
            "type": "number",
            "format": "double"
          },
          "forM_Title": {
            "type": "string",
            "nullable": true
          },
          "forM_Type_Description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReadParkingDTO": {
        "type": "object",
        "properties": {
          "parK_Id": {
            "type": "integer",
            "format": "int32"
          },
          "parK_Nom": {
            "type": "string",
            "nullable": true
          },
          "parK_NbEtages": {
            "type": "integer",
            "format": "int32"
          },
          "parK_NbPlaces": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ReadPaysDTO": {
        "type": "object",
        "properties": {
          "payS_Id": {
            "type": "integer",
            "format": "int32"
          },
          "payS_Nom": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReadPlaceLibDTO": {
        "type": "object",
        "properties": {
          "parK_Id": {
            "type": "integer",
            "format": "int32"
          },
          "parK_Nom": {
            "type": "string",
            "nullable": true
          },
          "plA_Id": {
            "type": "integer",
            "format": "int32"
          },
          "plA_Etage": {
            "type": "integer",
            "format": "int32"
          },
          "plA_NumeroPlace": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ReadResClientDTO": {
        "type": "object",
        "properties": {
          "reS_Id": {
            "type": "integer",
            "format": "int32"
          },
          "reS_DateReservation": {
            "type": "string",
            "format": "date-time"
          },
          "reS_DateDebut": {
            "type": "string",
            "format": "date-time"
          },
          "reS_DateFin": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "plA_Etage": {
            "type": "integer",
            "format": "int32"
          },
          "plA_NumeroPlace": {
            "type": "integer",
            "format": "int32"
          },
          "parK_Id": {
            "type": "integer",
            "format": "int32"
          },
          "parK_Nom": {
            "type": "string",
            "nullable": true
          },
          "adrS_Numero": {
            "type": "integer",
            "format": "int32"
          },
          "adrS_NomRue": {
            "type": "string",
            "nullable": true
          },
          "adrS_Ville": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReadReservationParkingDTO": {
        "type": "object",
        "properties": {
          "reS_Id": {
            "type": "integer",
            "format": "int32"
          },
          "reS_DateDebut": {
            "type": "string",
            "format": "date-time"
          },
          "reS_DateFin": {
            "type": "string",
            "format": "date-time"
          },
          "plA_Id": {
            "type": "integer",
            "format": "int32"
          },
          "perS_Nom": {
            "type": "string",
            "nullable": true
          },
          "perS_Prenom": {
            "type": "string",
            "nullable": true
          },
          "perS_Id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ReadTransacDTO": {
        "type": "object",
        "properties": {
          "tranS_Id": {
            "type": "integer",
            "format": "int32"
          },
          "tranS_Somme": {
            "type": "number",
            "format": "double"
          },
          "tranS_Date": {
            "type": "string",
            "format": "date-time"
          },
          "tranS_Communication": {
            "type": "string",
            "nullable": true
          },
          "cB_Nom": {
            "type": "string",
            "nullable": true
          },
          "cB_NumCompte": {
            "type": "string",
            "nullable": true
          },
          "nom": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReadTypeFormDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StatFacturesBO": {
        "type": "object",
        "properties": {
          "factNonPaye": {
            "type": "integer",
            "format": "int32"
          },
          "factPayee": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "StatPlacesBo": {
        "type": "object",
        "properties": {
          "occupees": {
            "type": "integer",
            "format": "int32"
          },
          "libres": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "StatReservationDebFinBO": {
        "type": "object",
        "properties": {
          "reservationsCommencent": {
            "type": "integer",
            "format": "int32"
          },
          "reservationsTerminent": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "StatReservationParMois": {
        "type": "object",
        "properties": {
          "year": {
            "type": "integer",
            "format": "int32"
          },
          "month": {
            "type": "integer",
            "format": "int32"
          },
          "reservationNombre": {
            "type": "integer",
            "format": "int32"
          },
          "totalDuree": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "StatTransacParMois": {
        "type": "object",
        "properties": {
          "year": {
            "type": "integer",
            "format": "int32"
          },
          "month": {
            "type": "integer",
            "format": "int32"
          },
          "transactionNombre": {
            "type": "integer",
            "format": "int32"
          },
          "totalSomme": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "UpdateClientResDTO": {
        "type": "object",
        "properties": {
          "reS_Id": {
            "type": "integer",
            "format": "int32"
          },
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "reS_DateFin": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "placeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "formPrixId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdatePresonCLiDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "pwd": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WeatherForecast": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date"
          },
          "temperatureC": {
            "type": "integer",
            "format": "int32"
          },
          "temperatureF": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "summary": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "parkingDto": {
        "type": "object",
        "properties": {
          "parK_Nom": {
            "type": "string",
            "nullable": true
          },
          "parK_NbEtages": {
            "type": "integer",
            "format": "int32"
          },
          "parK_NbPlaces": {
            "type": "integer",
            "format": "int32"
          },
          "adrS_Numero": {
            "type": "integer",
            "format": "int32"
          },
          "adrS_NomRue": {
            "type": "string",
            "nullable": true
          },
          "adrS_Ville": {
            "type": "string",
            "nullable": true
          },
          "adrS_Latitude": {
            "type": "number",
            "format": "double"
          },
          "adrS_Longitude": {
            "type": "number",
            "format": "double"
          },
          "payS_Id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "Encoder votre toke; Exemple : Bearer {token}",
        "scheme": "Bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}